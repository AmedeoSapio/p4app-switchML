syntax = "proto3";

package SwitchML;

service Session {
  rpc RDMASession (RDMASessionRequest) returns (RDMASessionResponse) {}
  rpc UDPSession (UDPSessionRequest) returns (UDPSessionResponse) {}
}

service Synch {
  rpc Barrier(BarrierRequest) returns (BarrierResponse) {}
  rpc Broadcast(BroadcastRequest) returns (BroadcastResponse) {}
}

enum PacketSize {
  MTU_128  = 0;
  MTU_256  = 1;
  MTU_512  = 2;
  MTU_1024 = 3;
}

message RDMASessionRequest {
  uint32 session_id = 1;
  uint32 rank = 2;
  uint32 session_size = 3;
  uint64 mac = 4;
  uint32 ipv4 = 5;
  uint32 rkey = 6;
  PacketSize packet_size = 7;
  uint32 message_size = 8;
  repeated uint32 qpns = 9;
  repeated uint32 psns = 10;
}

message RDMASessionResponse {
  uint64 session_id = 1;
  uint64 mac = 2;
  uint32 ipv4 = 3;
  uint32 rkey = 4;
  repeated uint32 qpns = 5;
  repeated uint32 psns = 6;
}

message UDPSessionRequest {
  uint64 session_id = 1;
  uint32 rank = 2;
  uint32 session_size = 3;
  uint64 mac = 4;
  uint32 ipv4 = 5;
  PacketSize packet_size = 7;
}

message UDPSessionResponse {
  uint64 session_id = 1;
  uint64 mac = 2;
  uint32 ipv4 = 3;
}

message BarrierRequest {
  uint32 size = 1;
}

message BarrierResponse {
}

message BroadcastRequest {
  uint64 value = 1;
  uint32 rank = 2;
  uint32 size = 3;
  uint32 root = 4;
}

message BroadcastResponse {
  uint64 value = 1;
}
